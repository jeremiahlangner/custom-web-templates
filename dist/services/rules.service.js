(()=>{var i=class{static async getProvider(e){return await i._providers[e]}static load(){this._services=window.vcdc.services}static async getService(e){return i.load(),console.log(e,await i._services[e]),await i._services[e]}static registerServices(e){for(let r in e)this.registerService(r,e[r])}static registerService(e,r){i._services[e]=r,!window.vcdc.services[e]&&(window.vcdc.services[e]=r)}},t=i;t._providers={Application:Promise.resolve(window.vcdc)},t._services={};var s=class{constructor(e){t.getService("ApiService").then(r=>{this.apiService=r,this.apiService.request({url:e,headers:{Accept:"application/json","Content-type":"application/json"}}).then(c=>this.rules=c)})}testRule(e){}};})();
