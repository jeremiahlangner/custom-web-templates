(()=>{var i=class{static async getProvider(t){return await i._providers[t]}static load(){this._services=window.vcdc.services}static async getService(t){return i.load(),console.log(t,await i._services[t]),await i._services[t]}static registerServices(t){for(let s in t)this.registerService(s,t[s])}static registerService(t,s){i._services[t]=s,!window.vcdc.services[t]&&(window.vcdc.services[t]=s)}},e=i;e._providers={Application:Promise.resolve(window.vcdc)},e._services={};var n=class extends HTMLElement{constructor(){super();this.init().then(()=>{this.attachShadow({mode:"open"}),this._template=document.createElement("template"),this.configure(),this.render()})}async init(){let s=[e.getService("ComponentService").then(c=>this.componentService=c),e.getService("Rules").then(c=>this.rules=c)];return Promise.all(s)}configure(){this.config||(this.config={}),this._config||(this._config=this.config),this.config.style!==this._config.style&&(this._config.style=this.config.style,this.setAttribute("style",this._config.style||"")),this.config.class&&this.config.class!==this._config.class&&(this._config.class=this.config.class,this._template.classList.forEach(s=>this._template.classList.remove(s)),Array.isArray(this.config.class)?this.config.class.forEach(s=>this._template.classList.add(s)):this._template.classList.add(this.config.class)),this.config.layout!==this._config.layout&&(this._config.layout=this.config.layout)}render(){this._template.innerHTML+=`<slot></slot>${this.template}`,this.shadowRoot?.appendChild(this._template.content.cloneNode(!0))}};customElements.define("vcdc-app",n);})();
