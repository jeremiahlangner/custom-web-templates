(()=>{var o=class{constructor(e,i,g){let v=this,p={get(r,s){return typeof r[s]=="object"&&r[s]!==null?new Proxy(r[s],p):(v._getter(s),r[s])},set(r,s,c){r[s]!==c&&(v._setter(s,c,r[s]),r[s]=c)}};return this._obj=new Proxy(g,p),this._obj}};var t=class{static async getProvider(e){return await t._providers[e]}static async getService(e){return await t._services[e]}static registerService(e){let i=e.name;t._services[i]=e}},n=t;n._providers={Application:Promise.resolve(window.vcdcApp)},n._services={Component:Promise.resolve(window.vcdcApp.services.ComponentService),Observed:Promise.resolve(window.vcdcApp.services.Observed)};var a=class{constructor(){this.changeList=[];window.vcdc={services:{},app:{}};let e=new o({},()=>{},this.changes);this.registerServices()}changes(){for(let e of changeList)e()}registerServices(){let e={ApiService:new ApiService,StorageService:new StorageService};for(let i in e)n.registerService(e[i])}},f=new a;})();
