(()=>{var a=class{constructor(e,t,c){let v=this,m={get(n,s){return typeof n[s]=="object"&&n[s]!==null?new Proxy(n[s],m):(v._getter(s),n[s])},set(n,s,g){n[s]!==g&&(v._setter(s,g,n[s]),n[s]=g)}};return this._obj=new Proxy(c,m),this._obj}};var i=class{static async getProvider(e){return await i._providers[e]}static async getService(e){return console.log(i._services),await i._services[e]}static registerServices(e){for(let t in e)this.registerService(t,e[t])}static registerService(e,t){i._services[e]=t}},r=i;r._providers={Application:Promise.resolve(window.vcdc)},r._services={};var p=class{constructor(){}async request(e){let t=new Request(e.url,e);return fetch(t).then(c=>e.headers&&e.headers.Accept==="application/json"?c.json():c)}};var h=class{constructor(){}};var u=class{constructor(){this._hashes=[];r.getProvider("Application").then(e=>{this._application=e})}hash(){let e="";for(;this._hashes.find(t=>t==e);)e=(Math.random()+1).toString(36).substring(7);return this._hashes.push(e),e}delete(e){}insert(e){}};var l=class{constructor(){this.changeList=[];window.vcdc={services:{},components:{},app:{}};let e=new a({},()=>{},this.changes);this.registerServices(),this.registerComponents()}changes(){for(let e of this.changeList);}async registerComponents(){let t=await(await r.getService("ApiService")).request({url:"./assets/configs/components.json",headers:{"Content-type":"application/json",Accept:"application/json"}});console.log(t)}registerServices(){r.registerServices({ApiService:new p,Storage:new h,ComponentService:new u})}},b=new l;})();
