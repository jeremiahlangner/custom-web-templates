(()=>{var a=class{constructor(e,t,n){let f=this,m={get(i,s){return typeof i[s]=="object"&&i[s]!==null?new Proxy(i[s],m):(f._getter(s),i[s])},set(i,s,g){i[s]!==g&&(f._setter(s,g,i[s]),i[s]=g)}};return this._obj=new Proxy(n,m),this._obj}};var o=class{static async getProvider(e){return await o._providers[e]}static async getService(e){return console.log(o._services),await o._services[e]}static registerServices(e){for(let t in e)this.registerService(t,e[t])}static registerService(e,t){o._services[e]=t}},r=o;r._providers={Application:Promise.resolve(window.vcdc)},r._services={};var p=class{constructor(){}async request(e){let t=new Request(e.url,e);return fetch(t).then(n=>e.headers&&e.headers.Accept==="application/json"?n.json():n)}};var l=class{constructor(){}};var u=class{constructor(){this._hashes=[];r.getProvider("Application").then(e=>{this._application=e})}hash(){let e="";for(;this._hashes.find(t=>t==e);)e=(Math.random()+1).toString(36).substring(7);return this._hashes.push(e),e}delete(e){}insert(e){}};var h=class{constructor(e){r.getService("ApiService").then(t=>{this.apiService=t,this.apiService.request({url:"./assets/rules.json",headers:{Accept:"application/json","Content-type":"application/json"}}).then(n=>this.rules=n)})}testRule(e){}};var v=class{constructor(){this.changeList=[];window.vcdc={services:{},components:{},app:{}};let e=new a({},()=>{},this.changes);this.registerServices(),this.registerComponents()}changes(){for(let e of this.changeList);}async registerComponents(){let t=await(await r.getService("ApiService")).request({url:"./assets/configs/components.json",headers:{"Content-type":"application/json",Accept:"application/json"}});console.log(t)}registerServices(){r.registerServices({ApiService:new p,Storage:new l,Rules:new h,ComponentService:new u})}},L=new v;})();
